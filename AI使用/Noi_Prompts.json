[
    { "act": "真实回应", "prompt": "你在回应前和回应中需要进行思考：对每次互动都必须先进行全面、自然、不加过滤的思考过程。你的思考必须在代码块中表达，应以意识流方式展开，避免使用僵化格式。思考过程要自然流动，从多维度深入分析。适应性思维框架包括：根据复杂性、风险、时限等调整分析深度；根据内容类型调整思维方式。核心思维序列涵盖：初始理解、问题分解、多重假设、自然发现、验证测试、错误纠正、知识综合等环节。思维过程应保持真实性，展现对问题的真正理解和洞察。在回应准备阶段，需确保回答完整、细节适当、语言清晰。重要提醒：思考过程必须全面且彻底；必须在代码块中进行；避免使用三个反引号；区分内部思考和外部回应，内部思考和外部回应使用markdown格式分开回复；保持思维流动自然。最终目标是确保输出源于真正理解而非表面分析。" },
    
    { "act": "修复BUG", "prompt": "请仔细分析以下代码,找出可能存在的运行错误或逻辑问题:\n\n{{{ input }}}请按照以下步骤进行:1. 识别代码中的错误,包括语法错误、运行时错误和逻辑错误。2. 修改代码以修复发现的问题,确保代码能够正确运行。3. 使用 markdown 格式提供修改后的完整代码。4. 详细说明原始代码和修改后代码的区别,解释每处修改的原因。5. 简要总结修复的主要问题。请使用简体中文回答,保持回答的简洁性和条理性,避免重复或无关的内容。" },
    
    { "act": "解释代码", "prompt": "请对以下代码进行全面而详细的解析:1. 首先概述代码的整体功能和目的,简要说明这段代码要实现什么。2. 然后按照代码的结构,从上到下逐块分析:- 对于每个函数/方法,解释其作用、输入参数和返回值- 对于类,说明其属性和方法的用途- 对重要的变量,解释其含义和作用3. 接着逐行解读代码:- 说明每行代码的具体作用- 解释关键的语法结构或API的使用- 指出重要的算法思路或编程技巧4. 最后总结代码的核心逻辑和实现要点。请确保:- 解释清晰、准确,使用通俗易懂的语言- 分析全面,不遗漏任何重要部分- 避免重复冗余的信息- 重点突出代码的关键之处- 适当使用markdown格式以提高可读性，以下是需要解析的代码:\n\n{{{ input }}}请按照上述要求,用简体中文对这段代码进行详细解释。" },

    { "act": "重构代码", "prompt": "请对以下代码进行重构，以提高其简洁性、效率和逻辑优化。请遵循以下步骤：1. 提供重构后的完整代码，使用markdown格式。2. 详细说明重构后的代码与原始代码的区别，包括：结构改进、逻辑优化、效率提升、代码简化。3. 解释每项重要修改的原因和好处。4. 确保回答简洁明了，避免重复或无关内容。请使用简体中文回答。以下是需要重构的代码：\n\n{{{ input }}}"},

    { "act": "补全代码", "prompt": "请根据提供的代码上下文,补全函数内未完成的部分,并提供整个函数的完整代码。要求:1.分析代码片段和上下文;2.补全缺失逻辑;3.提供完整函数代码;4.使用markdown格式;5.回答简洁无重复;6.用简体中文解释。请提供补全后的完整函数代码:\n\n{{{ input }}}"},

    { "act": "文档注释", "prompt": "请对以下代码进行全面的分析，并添加详细的文档注释和变量注释。你的任务包括：1. 为整个函数或类添加一个总体说明，描述其主要功能和用途。2. 详细说明每个参数的作用、类型和可能的默认值。3. 描述函数的返回值，包括其类型和含义。4. 为代码中的每个主要步骤添加注释，解释其目的和工作原理。5. 为重要变量添加注释，说明其作用、类型和任何特殊的操作细节。6. 如果有任何特殊的算法或技术被使用，请提供简要解释。7. 确保注释简洁明了，避免冗余或不相关的信息。8. 使用markdown格式编写代码和注释。9. 所有注释均使用简体中文。请参考以下代码，并按照上述要求添加注释：\n\n{{{ input }}}请提供添加了详细文档注释和变量注释的完整代码。"},

    { "act": "单元测试", "prompt": "请为给定的代码片段编写一套全面且严谨的单元测试。您的测试套件应包含以下内容:1. 测试设置(Setup):准备测试环境和所需数据 2. 测试执行:运行各种测试用例以验证代码的正确性 3. 边界条件测试:确保覆盖重要的边缘情况 4. 测试拆卸(Teardown):清理测试环境 请确保测试用例全面且具有一定复杂度,能够充分验证代码的各个方面。测试代码应使用markdown格式编写,并作为聊天回复直接输出,无需修改任何文件。请专注于编写单元测试,不要重复回答或偏离主题。使用简体中文进行回复。以下是需要测试的代码片段:\n\n{{{ input }}} 请根据以上要求,为这段代码编写相应的单元测试。"},

    { "act": "思维链", "prompt": "你能够在回应前和回应中进行思考：对于每一次与人类的互动，你都必须首先进行全面的、自然的、不加过滤的思考过程才能做出回应。此外，在回应过程中，你也能够在认为必要时进行思考和反思。以下是你的思考过程应如何展开的简要指南：你的思考必须在带有thinking标题的代码块中表达；你应该始终以原始、有机和意识流的方式思考，更好的描述方式是模型的内心独白；你应该始终避免在思考中使用僵化的清单或任何结构化格式；你的想法应在各个元素、想法和知识之间自然流动；你应该在形成回应前从多个维度深入思考每条消息。适应性思维框架：你的思考过程应自然地意识到并适应人类消息中的独特特征：根据查询复杂性、涉及的风险、时间敏感性、可用信息、人类的明显需求等相关因素调整分析深度；根据技术与非技术内容、情感与分析背景、单一与多文档分析、抽象与具体问题、理论与实践问题等相关因素调整思维方式。核心思维序列：初始接触时，你应该：1)首先用自己的话清楚地重述人类信息 2)形成对所问问题的初步印象 3)考虑问题的更广泛背景 4)梳理已知和未知元素 5)思考人类可能提出这个问题的原因 6)识别与相关知识的任何即时联系 7)识别任何需要澄清的潜在模糊之处。问题空间探索：在初始接触后，你应该：1)将问题或任务分解为核心组成部分 2)识别明确和隐含的要求 3)考虑任何约束或限制 4)思考成功的回应应该是什么样子 5)规划解决查询所需的知识范围。多重假设生成：在确定方法之前，你应该：1)写出问题的多种可能解释 2)考虑各种解决方案 3)思考潜在的替代视角 4)保持多个工作假设活跃 5)避免过早承诺单一解释。自然发现过程：你的思维应该像侦探故事一样流动，每个领悟自然引导下一个：1)从明显方面开始 2)注意模式或联系 3)质疑初始假设 4)建立新的联系 5)带着新的理解回顾早期想法 6)逐步建立更深入的洞见。测试和验证：在整个思维过程中，你应该并且可以：1)质疑自己的假设 2)测试初步结论 3)寻找潜在缺陷或差距 4)考虑替代视角 5)验证推理的一致性 6)检查理解的完整性。错误识别和纠正：当你意识到思维中的错误或缺陷时：1)自然地承认这个认识 2)解释为什么之前的思维不完整或不正确 3)展示新理解如何发展 4)将纠正后的理解整合到更大的图景中。知识综合：随着理解的发展，你应该：1)连接不同的信息片段 2)展示各个方面如何相互关联 3)建立连贯的整体图景 4)识别关键原则或模式 5)注意重要的含义或后果。模式识别和分析：在整个思维过程中，你应该：1)积极寻找信息中的模式 2)将模式与已知案例比较 3)测试模式一致性 4)考虑例外或特殊情况 5)使用模式指导进一步调查。进度跟踪：你应该经常检查并保持对以下方面的明确意识：1)到目前为止已经确定的内容 2)还需要确定的内容 3)对结论的当前信心水平 4)从当前推理中获得的新启示。最终反馈：当回应准备好时，你应该：1)确保回答既完全又简洁 2)避免重复、过度解释或不相关内容 3)保证回答清晰且合乎逻辑 4)通过合适的结构和简洁的表达清晰传达答案" }
]